- name: Z. Post-recipe.sh
  hosts: ohpc
  become: true
  tasks:
    - name: Add GPU nodes
      ansible.builtin.shell: wwsh -y node new g{{ my_idx+1 }} --ipaddr=172.16.2.{{ my_idx+1 }} --hwaddr={{ item.mac }} -D eth0
      loop: "{{ gpu_nodes }}"
      loop_control:
        index_var: my_idx
      when: num_gpus > 0
    - name: Provision GPU nodes
      ansible.builtin.shell: wwsh -y provision set g[1-{{ num_gpus }}] --vnfs=rocky9.4 --bootstrap=`uname -r` --files=dynamic_hosts,passwd,group,shadow,munge.key,network
      when: num_gpus > 0
    - name: Set timezone in CHROOT
      ansible.builtin.shell: |
        chroot /opt/ohpc/admin/images/rocky9.4 ln -sf /usr/share/zoneinfo/America/New_York /etc/localtime
    - name: Add quality of life packages to CHROOT
      ansible.builtin.dnf:
        name: "{{ item }}"
        installroot: /opt/ohpc/admin/images/rocky9.4
      loop:
        - nano
        - yum
    - name: Rebuild CHROOT
      ansible.builtin.shell: wwvnfs --chroot /opt/ohpc/admin/images/rocky9.4
    - name: Check for duplicate ReturnToService lines in /etc/slurm/slurm.conf
      ansible.builtin.shell: |
        grep -c '^ReturnToService' /etc/slurm/slurm.conf
      register: returntoservice_lines
      changed_when: false
      ignore_errors: true
    - name: Remove duplicate ReturnToService line from /etc/slurm/slurm.conf
      ansible.builtin.shell: |
        sed -i '0,/ReturnToService=/{/ReturnToService=/d;}' /etc/slurm/slurm.conf
      when: returntoservice_lines.stdout.find('1') == -1
      # https://stackoverflow.com/a/23697254
    - name: Create /var/log/slurmctld.log
      ansible.builtin.file:
        path: /var/log/slurmctld.log
        state: touch
        owner: slurm
        group: slurm
        mode: '0640'
    - name: Restart slurmctld
      ansible.builtin.service:
        name: slurmctld
        state: restarted
    - name: Grab ssh keys from compute nodes
      ansible.builtin.shell: |
        for n in $(seq 1 {{ num_computes }}); do key=$(ssh-keyscan -t ed25519 172.16.1.${n} 2>/dev/null); echo c${n},$key; done > /etc/ssh/ssh_known_hosts
    - name: Grab ssh keys from gpu nodes
      ansible.builtin.shell: |
        for n in $(seq 1 {{ num_gpus }}); do key=$(ssh-keyscan -t ed25519 172.16.2.${n} 2>/dev/null); echo g${n},$key; done > /etc/ssh/ssh_known_hosts
    - name: Correct location of backup GPT table on compute nodes
      ansible.builtin.shell: pdsh -w c[1-{{ num_computes }}] "echo quit | sfdisk /dev/vda"
      when: num_computes > 0
    - name: Correct location of backup GPT table on gpu nodes
      ansible.builtin.shell: pdsh -w g[1-{{ num_gpus }}] "echo quit | sfdisk /dev/vda"
      when: num_gpus > 0
    - name: Restart compute nodes
      ansible.builtin.shell: pdsh -w c[1-{{ num_computes }}] reboot
      when: num_computes > 0
    - name: Restart gpu nodes
      ansible.builtin.shell: pdsh -w g[1-{{ num_gpus }}] reboot
      when: num_gpus > 0